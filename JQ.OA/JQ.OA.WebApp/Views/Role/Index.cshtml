@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Users Management</title>
    <link href="~/Content/easyui.css" rel="stylesheet" />
    <link href="~/Content/JQEasyUI/themes/icon.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.7.1.min.js"></script>
    <script src="~/Scripts/jquery.easyui.min.js"></script>
    <script src="~/Scripts/easyui-lang-en.js"></script>
    <script src="~/Scripts/datapattern.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


    <script type="text/javascript">
        $(function () {
            loadData();
            $("#addDiv").css("display", "none");
            $("#editDiv").css("display", "none");
            //Searching
            

        });

        function loadData(pars) {
            $('#tt').datagrid({
                url: '/Role/GetAllRoleInfos',
                title: 'Roles Management',
                width: 700,
                height: 400,
                fitColumns: true, //Columns self adjustment
                nowrap: false,
                idField: 'ID',//The column of the key
                loadMsg: 'Loading roles info...',
                pagination: true,//Paging or not
                singleSelect: false,//Allow to select single row or not
                pageSize: 5,//Max items in a page
                pageNumber: 1,//Current page number
                pageList: [5, 10, 15],
                queryParams: pars,//Paras sent to back end.
                columns: [[//c.UserName, c.UserPass, c.Email, c.RegTime
                    { field: 'ck', checkbox: true, align: 'left', width: 50 },
                    { field: 'ID', title: 'No.', width: 30 },
                    { field: 'RoleName', title: 'Name', width: 120 }, 
                    { field: "UserName", title: "Create By", width:80},
                    {
                        field: 'SubTime', title: 'Reg Time', width: 130, align: 'right',
                        formatter: function (value, row, index) {
                            if (value) {
                                return (eval(value.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"))).pattern("yyyy-M-d");
                            } else {
                                return null;
                            }
                        }

                    }
                ]],
                toolbar: [{
                    id: 'btnDelete',
                    text: 'Delete',
                    iconCls: 'icon-remove',
                    handler: function () {

                        deleteRoles();
                    }
                }, {
                    id: 'btnAdd',
                    text: 'Add',
                    iconCls: 'icon-add',
                    handler: function () {
                        addRole();
                    }
                }, {
                    id: 'btnEdit',
                    text: 'Edit',
                    iconCls: 'icon-edit',
                    handler: function () {
                        editRole();
                    }
                }],
            })
        }

        //Delete selected users
        function deleteRoles() {
            var rows = $("#tt").datagrid('getSelections');
            if (!rows || rows.length == 0) {
                $.messager.alert("Tips", "Please selected the roles to delete", "error");
            }
            $.messager.confirm("Tips", "Do you want to delete these roles?", function (r) {
                if (r) {
                    var strId = "";
                    for (var i = 0; i < rows.length; i++) {
                        strId = strId + rows[i].ID + ",";//1,2,3,
                    }
                    //rows.foreach(row => {
                    //    strId += row.ID + ","; //StrId = [1,2,3]
                    //})
                    strId = strId.substr(0, strId.length - 1);
                    $.post("/Role/DeleteRoles", { "strId": strId }, function (data) {
                        if (data == "ok") {
                            $("#tt").datagrid('clearSelections');
                            $("#tt").datagrid('reload'); // Use reload instead of loadData
                            //loadData();
                        } else {
                            $.messager.alert("Tips", "Failed to delete roles", "error");
                        }
                    })
                }
            })
        }

        //Add a user dialog
        function addRole() {
            $("#addDiv").css("display", "block");
            $("#addDiv").dialog({
                title: "Add a role",
                width: 300,
                height: 300,
                collapsible: true,
                resizable: true,
                modal: true,
                buttons: [{
                    text: "Submit",
                    iconCls: "icon-ok",

                    handler: function () {
                        $("#addForm").submit();
                    }
                }, {
                    text: "Cancel",
                    handler: function () {
                        $("#addDiv").dialog('close');
                    }
                }]
            });
        }

        //Edit a user info
        function editRole() {
            var rows = $('#tt').datagrid('getSelections');
            if (rows.length != 1) {
                $.messager.alert("Tips", "Please select one and only one item", "error");
                return;
            }

            $.post("/Role/GetARole", { "id": rows[0].ID }, function (data) {
                if (data.msg == "ok") {
                    $("#txtEName").val(data.serverData.RoleName);                    
                    //$("#txtSubTime").val(ChangeDateFormat(data.serverData.SubTime));
                    $("#txtDelFlag").val(data.serverData.DelFlag);
                    $("#txtSubBy").val(data.serverData.SubBy);
                    $("#txtId").val(data.serverData.ID);
                    $("#editDiv").css("display", "block");
                    $("#editDiv").dialog({
                        title: "Edit a role's info",
                        width: 300,
                        height: 300,
                        collapsible: true,
                        resizable: true,
                        modal: true,
                        buttons: [{
                            text: "Ok",
                            iconCls: 'icon-ok',
                            handler: function () {
                                $("#editForm").submit();
                            }
                        },
                        {
                            text: "Cancel",
                            handler: function () {
                                $('#editDiv').dialog('close');
                            }

                        }]
                    });
                } else {
                    $.messager.alert("Tips", "The role does not exist", "error");
                }
            })
        }

        //Actions after edit dialog
        function afterEdit(data) {
            if (data == "ok") {
                $('#editDiv').dialog('close');
                $('#tt').datagrid('reload');
            } else {
                $.messager.alert("Tips", "Failed to update the role", "error");
            }
        }


        //Actions after add a user
        function afterAdd(data) {
            if (data == "ok") {
                $("#addForm input").val(""); //Clear input values
                $("#addDiv").dialog('close');
                $("#tt").datagrid("reload");
            } else {
                $.messager.alert("Tips", "Failed to add a role", "error");
            }
        }

        function ChangeDateFormat(cellval) {
            var date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            return date.getFullYear() + "-" + month + "-" + currentDate;
        }
    </script>
</head>
<body>
    <div>
        @*<div>
            User Name: <input type="text" id="txtRoleName" />
            &nbsp;&nbsp;
            Phone: <input type="text" id="txtPhone" />
            <input type="button" value="Search" id="btnSearch" />
        </div>*@
        <table id="tt" style="width: 700px;" title="Users management" iconcls="icon-edit"></table>
    </div>
    <!--Add a user -->
    <div id="addDiv">
        @using (Ajax.BeginForm("Add", "Role",
            new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterAdd" }, new { id = "addForm" }))
        {
            <table>
                <tr><td>Role Name</td><td><input type="text" name="RoleName" /></td></tr>                
            </table>
        }
    </div>

    <!--Edit a User-->
    <div id="editDiv">
        @using (Ajax.BeginForm("EditRole", "Role", new { },
            new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterEdit" }, new { id = "editForm" }))
        {
            <input type="hidden" name="SubTime" id="txtSubTime" />
            <input type="hidden" name="DelFlag" id="txtDelFlag" />
            <input type="hidden" name="ID" id="txtId" />
            <input type="hidden" name="SubBy" id="txtSubBy" />
            <table>
                <tr><td>Role Name</td><td><input type="text" name="RoleName" id="txtEName" /></td></tr>
                
            </table>
        }

    </div>



</body>
</html>

